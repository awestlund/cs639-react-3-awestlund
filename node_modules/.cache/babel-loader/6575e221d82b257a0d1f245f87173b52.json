{"ast":null,"code":"var _jsxFileName = \"/Users/amberwestlund/Desktop/cs639-react-2-awestlund/src/RecommendSidebar.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport SearchAndFilter from './SearchAndFilter';\nimport ChipArea from './ChipArea';\n\nclass RecommendSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.searchAndFilter = new SearchAndFilter();\n    this.subject = React.createRef();\n    this.minimumCredits = React.createRef();\n    this.maximumCredits = React.createRef();\n    this.search = React.createRef();\n    this.state = {\n      chips: [],\n      allTerms: true\n    };\n  }\n\n  setState(currState) {\n    if (this.state.chips.length === 0) {\n      return;\n    }\n\n    console.log(this.state.chips);\n\n    if (currState) {\n      console.log(\"Any Term\");\n      this.state.allTerms = false;\n    } else {\n      console.log(\"All Terms\");\n      this.state.allTerms = true;\n    }\n\n    this.setCourses();\n  }\n\n  addChip(e) {\n    if (e.key == 'Enter' && this.search.current.value != '') {\n      if (!this.state.chips.includes(this.search.current.value)) {\n        this.state.chips.push(this.search.current.value);\n        this.setCourses();\n      }\n\n      this.search.current.value = '';\n    }\n  }\n\n  onChipRemove(title) {\n    const chips = this.state.chips;\n\n    if (chips.length === 1) {\n      console.log(\"test\");\n      chips.splice(0, 1);\n      this.state.chips = chips;\n      this.setCourses();\n    }\n\n    for (var index = chips.length; index--;) {\n      if (chips[index] === title) {\n        chips.splice(index, 1);\n      }\n    }\n\n    this.setState({\n      chips\n    });\n  }\n\n  setCourses() {\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, this.state.chips, this.state.allTerms, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value));\n  }\n\n  render() {\n    if (this.state.chips === null) return null;\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      style: {\n        width: 'calc(20vw - 5px)',\n        marginLeft: '5px',\n        height: 'calc(100vh - 10px)',\n        position: 'fixed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Rate Your Courses!\"))));\n  }\n\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["/Users/amberwestlund/Desktop/cs639-react-2-awestlund/src/RecommendSidebar.js"],"names":["React","Card","Form","ButtonToolbar","ToggleButton","ToggleButtonGroup","SearchAndFilter","ChipArea","RecommendSidebar","Component","constructor","props","searchAndFilter","subject","createRef","minimumCredits","maximumCredits","search","state","chips","allTerms","setState","currState","length","console","log","setCourses","addChip","e","key","current","value","includes","push","onChipRemove","title","splice","index","courses","render","width","marginLeft","height","position","Sidebar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport SearchAndFilter from './SearchAndFilter';\nimport ChipArea from './ChipArea';\n\nclass RecommendSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.searchAndFilter = new SearchAndFilter();\n    this.subject = React.createRef();\n    this.minimumCredits = React.createRef();\n    this.maximumCredits = React.createRef();\n    this.search = React.createRef();\n    this.state = {\n      chips: [],\n      allTerms: true\n    }\n  }\n\n  setState(currState) {\n    if(this.state.chips.length === 0) {\n      return;\n    }\n    console.log(this.state.chips)\n    if(currState) {\n      console.log(\"Any Term\")\n      this.state.allTerms = false;\n    } else {\n      console.log(\"All Terms\")\n      this.state.allTerms = true;\n    }\n    this.setCourses();\n  }\n\n  addChip(e) {\n    if(e.key == 'Enter' && this.search.current.value != '') {\n      if(!this.state.chips.includes(this.search.current.value)) {\n        this.state.chips.push(this.search.current.value);\n        this.setCourses();\n      }\n      this.search.current.value = '';\n    }\n  }\n  \n  onChipRemove(title) {\n    const chips = this.state.chips\n    if(chips.length === 1) {\n      console.log(\"test\")\n      chips.splice(0, 1);\n      this.state.chips = chips\n      this.setCourses();\n    }\n    for (var index = chips.length; index--;) {\n      if (chips[index] === title) {\n        chips.splice(index, 1)  \n      }\n    }\n    this.setState({chips})\n  }\n\n  setCourses() {\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, this.state.chips, this.state.allTerms, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value));\n  }\n\n  render() {\n    if (this.state.chips === null) return null;\n\n    return (\n      <>\n        <Card style={{width: 'calc(20vw - 5px)', marginLeft: '5px', height: 'calc(100vh - 10px)', position: 'fixed'}}>\n          <Card.Body>\n            <Card.Title>Rate Your Courses!</Card.Title>\n          </Card.Body>\n        </Card>\n      </>\n    )\n  }\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}