{"ast":null,"code":"class SearchAndFilter {\n  searchAndFilter(courses, chips, allChips, subject, minimumCredits, maximumCredits) {\n    if (chips.length !== 0 && allChips) {\n      let coursesChips = [];\n\n      for (const course of Object.values(courses)) {\n        let courseKeys = course.keywords;\n        var containsAll = chips.every(i => courseKeys.includes(i));\n\n        if (containsAll && !coursesChips.includes(course)) {\n          coursesChips.push(course);\n          break;\n        }\n      }\n\n      courses = coursesChips;\n    }\n\n    if (chips.length !== 0 && !allChips) {\n      let coursesChips = [];\n\n      for (const course of Object.values(courses)) {\n        for (const keyword of course.keywords) {\n          for (const key of chips) {\n            if (keyword.includes(key) && !coursesChips.includes(course)) {\n              coursesChips.push(course);\n              break;\n            }\n          }\n        }\n      }\n\n      courses = coursesChips;\n    }\n\n    if (subject !== 'All') {\n      let coursesSubject = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.subject === subject) coursesSubject.push(course);\n      }\n\n      courses = coursesSubject;\n    }\n\n    if (minimumCredits !== '') {\n      let coursesMinimumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits >= parseInt(minimumCredits)) coursesMinimumCredits.push(course);\n      }\n\n      courses = coursesMinimumCredits;\n    }\n\n    if (maximumCredits !== '') {\n      let coursesMaximumCredits = [];\n\n      for (const course of Object.values(courses)) {\n        if (course.credits <= parseInt(maximumCredits)) coursesMaximumCredits.push(course);\n      }\n\n      courses = coursesMaximumCredits;\n    }\n\n    return courses;\n  }\n\n}\n\nexport default SearchAndFilter;","map":{"version":3,"sources":["/Users/amberwestlund/Desktop/cs639-react-3-awestlund/src/SearchAndFilter.js"],"names":["SearchAndFilter","searchAndFilter","courses","chips","allChips","subject","minimumCredits","maximumCredits","length","coursesChips","course","Object","values","courseKeys","keywords","containsAll","every","i","includes","push","keyword","key","coursesSubject","coursesMinimumCredits","credits","parseInt","coursesMaximumCredits"],"mappings":"AAAA,MAAMA,eAAN,CAAsB;AACpBC,EAAAA,eAAe,CAACC,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,cAApC,EAAoDC,cAApD,EAAoE;AACjF,QAAGJ,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsBJ,QAAzB,EAAmC;AACjC,UAAIK,YAAY,GAAG,EAAnB;;AACA,WAAI,MAAMC,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAIW,UAAU,GAAGH,MAAM,CAACI,QAAxB;AACA,YAAIC,WAAW,GAAGZ,KAAK,CAACa,KAAN,CAAYC,CAAC,IAAIJ,UAAU,CAACK,QAAX,CAAoBD,CAApB,CAAjB,CAAlB;;AACA,YAAGF,WAAW,IAAI,CAACN,YAAY,CAACS,QAAb,CAAsBR,MAAtB,CAAnB,EAAkD;AAChDD,UAAAA,YAAY,CAACU,IAAb,CAAkBT,MAAlB;AACA;AACD;AACF;;AACDR,MAAAA,OAAO,GAAGO,YAAV;AACD;;AAED,QAAGN,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA1B,EAAoC;AAClC,UAAIK,YAAY,GAAG,EAAnB;;AACA,WAAI,MAAMC,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,aAAI,MAAMkB,OAAV,IAAqBV,MAAM,CAACI,QAA5B,EAAsC;AACpC,eAAI,MAAMO,GAAV,IAAiBlB,KAAjB,EAAwB;AACtB,gBAAGiB,OAAO,CAACF,QAAR,CAAiBG,GAAjB,KAAyB,CAACZ,YAAY,CAACS,QAAb,CAAsBR,MAAtB,CAA7B,EAA4D;AAC1DD,cAAAA,YAAY,CAACU,IAAb,CAAkBT,MAAlB;AACA;AACD;AACF;AACF;AACF;;AACDR,MAAAA,OAAO,GAAGO,YAAV;AACD;;AAED,QAAGJ,OAAO,KAAK,KAAf,EAAsB;AACpB,UAAIiB,cAAc,GAAG,EAArB;;AACA,WAAI,MAAMZ,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAGQ,MAAM,CAACL,OAAP,KAAmBA,OAAtB,EACEiB,cAAc,CAACH,IAAf,CAAoBT,MAApB;AACH;;AACDR,MAAAA,OAAO,GAAGoB,cAAV;AACD;;AAED,QAAGhB,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAIiB,qBAAqB,GAAG,EAA5B;;AACA,WAAI,MAAMb,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAGQ,MAAM,CAACc,OAAP,IAAkBC,QAAQ,CAACnB,cAAD,CAA7B,EACEiB,qBAAqB,CAACJ,IAAtB,CAA2BT,MAA3B;AACH;;AACDR,MAAAA,OAAO,GAAGqB,qBAAV;AACD;;AAED,QAAGhB,cAAc,KAAK,EAAtB,EAA0B;AACxB,UAAImB,qBAAqB,GAAG,EAA5B;;AACA,WAAI,MAAMhB,MAAV,IAAoBC,MAAM,CAACC,MAAP,CAAcV,OAAd,CAApB,EAA4C;AAC1C,YAAGQ,MAAM,CAACc,OAAP,IAAkBC,QAAQ,CAAClB,cAAD,CAA7B,EACEmB,qBAAqB,CAACP,IAAtB,CAA2BT,MAA3B;AACH;;AACDR,MAAAA,OAAO,GAAGwB,qBAAV;AACD;;AAED,WAAOxB,OAAP;AACD;;AA1DmB;;AA6DtB,eAAeF,eAAf","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, chips, allChips, subject, minimumCredits, maximumCredits) {\r\n    if(chips.length !== 0 && allChips) {\r\n      let coursesChips = [];\r\n      for(const course of Object.values(courses)) {\r\n        let courseKeys = course.keywords;\r\n        var containsAll = chips.every(i => courseKeys.includes(i));\r\n        if(containsAll && !coursesChips.includes(course)) {\r\n          coursesChips.push(course);\r\n          break;\r\n        }\r\n      }\r\n      courses = coursesChips;\r\n    }\r\n\r\n    if(chips.length !== 0 && !allChips) {\r\n      let coursesChips = [];\r\n      for(const course of Object.values(courses)) {\r\n        for(const keyword of course.keywords) {\r\n          for(const key of chips) {\r\n            if(keyword.includes(key) && !coursesChips.includes(course)) {\r\n              coursesChips.push(course);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      courses = coursesChips;\r\n    }\r\n\r\n    if(subject !== 'All') {\r\n      let coursesSubject = [];\r\n      for(const course of Object.values(courses)) {\r\n        if(course.subject === subject)\r\n          coursesSubject.push(course)\r\n      }\r\n      courses = coursesSubject;\r\n    }\r\n\r\n    if(minimumCredits !== '') {\r\n      let coursesMinimumCredits = [];\r\n      for(const course of Object.values(courses)) {\r\n        if(course.credits >= parseInt(minimumCredits))\r\n          coursesMinimumCredits.push(course);\r\n      }\r\n      courses = coursesMinimumCredits;\r\n    }\r\n\r\n    if(maximumCredits !== '') {\r\n      let coursesMaximumCredits = [];\r\n      for(const course of Object.values(courses)) {\r\n        if(course.credits <= parseInt(maximumCredits))\r\n          coursesMaximumCredits.push(course);\r\n      }\r\n      courses = coursesMaximumCredits;\r\n    }\r\n\r\n    return courses;\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter; \r\n"]},"metadata":{},"sourceType":"module"}