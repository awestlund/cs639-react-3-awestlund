{"ast":null,"code":"var _jsxFileName = \"/Users/amberwestlund/Desktop/cs639-react-3-awestlund/src/RecommendSidebar.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport PreviousCourse from \"./PreviousCourse\";\nimport Button from \"react-bootstrap/Button\";\nimport CourseArea from \"./CourseArea\";\nimport Course from \"./Course\"; // import PreviousCourseArea from './PreviousCourseArea';\n\nclass RecommendSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch(\"https://mysqlcs639.cs.wisc.edu/students/5022025924/classes/completed\").then(res => res.json()).then(data => this.setState({\n        previousCourseNames: data\n      }));\n    };\n\n    this.setLikedCourses = course => {\n      let temp = this.state.likedCourses;\n      temp.push(course);\n      this.setState({\n        likedCourses: temp\n      });\n      console.log(this.state.likedCourses);\n    };\n\n    this.setDislikedCourses = course => {\n      let temp2 = this.state.dislikedCourses;\n      temp2.push(course);\n      this.setState({\n        dislikedCourses: temp2\n      });\n      console.log(this.state.dislikedCourses);\n    };\n\n    this.getPrevCourses = () => {\n      let courses = [];\n\n      for (const course of Object.entries(this.props.courses)) {\n        for (const prevName of Object.values(this.state.previousCourseNames.data)) {\n          if (course[0] === prevName) {\n            courses.push(React.createElement(PreviousCourse, {\n              key: course[0],\n              data: course[1],\n              setLikedCourses: this.setLikedCourses,\n              setDislikedCourses: this.setDislikedCourses,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }));\n          }\n        }\n\n        if (!this.state.previousCourseNames.data.includes(course[0]) && !this.state.coursesDisplay.includes(course[1])) {\n          this.state.coursesDisplay.push(course[1]);\n        }\n      }\n\n      console.log(\"all other courses\" + this.state.coursesDisplay);\n      return courses;\n    };\n\n    this.state = {\n      previousCourseNames: {},\n      coursesDisplay: [],\n      likedCourses: [],\n      dislikedCourses: [],\n      displayKeywords: false,\n      displayNewCourses: false,\n      rateButton: true\n    };\n    this.handleDoneClick = this.handleDoneClick.bind(this);\n    this.handleAgainClick = this.handleAgainClick.bind(this);\n    this.subjects = React.createRef();\n  }\n\n  handleDoneClick() {\n    //run recommend algo\n    this.setState({\n      displayKeywords: true\n    });\n    this.setState({\n      displayNewCourses: true\n    });\n    this.setState({\n      rateButton: false\n    }); // this.getDisplayCourses();\n\n    var nodes = document.getElementById(\"rateCourses\").getElementsByTagName('*');\n\n    for (var i = 0; i < nodes.length; i++) {\n      nodes[i].disabled = true;\n    }\n  }\n\n  handleAgainClick() {\n    this.setState({\n      displayKeywords: false\n    });\n    this.setState({\n      displayNewCourses: false\n    });\n    this.setState({\n      rateButton: true\n    });\n    var nodes = document.getElementById(\"rateCourses\").getElementsByTagName('*');\n\n    for (var i = 0; i < nodes.length; i++) {\n      nodes[i].disabled = false;\n    }\n\n    this.setState({\n      coursesDisplay: []\n    });\n    this.setState({\n      likedCourses: []\n    });\n    this.setState({\n      dislikedCourses: []\n    });\n  }\n\n  getKeywordOptions() {\n    let keywordOptions = [];\n\n    for (const keyword of this.props.subjects) {\n      keywordOptions.push(React.createElement(\"option\", {\n        key: keyword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, keyword));\n    }\n\n    return keywordOptions;\n  }\n\n  getDisplayCourses() {\n    let filteredCourses = []; //this.state.coursesDisplay;\n    //find liked key words\n\n    let likedKeywords = this.getLikedKeywords(); //find disliked key words\n\n    let dislikedKeywords = this.getDislikedKeywords();\n    let keywords = []; //find overall liked keywords\n\n    for (const i of likedKeywords) {\n      if (!dislikedKeywords.includes(i)) {\n        keywords.push(i);\n      }\n    }\n\n    console.log(\"my keywords: \" + keywords); //add the courses with the overall key words to be recommended\n\n    console.log(\"Pos display\" + this.state.coursesDisplay);\n\n    for (const course in Object.values(this.state.coursesDisplay)) {\n      for (const key in keywords) {\n        if (course.keywords.includes(key)) {\n          filteredCourses.push(course);\n          console.log();\n        }\n      }\n    } // let subs = getLikedSubjects();\n    // for (const course in Object.values(this.state.coursesDisplay)){\n    //   if (subs.includes(course.subject)){\n    //     if(!filteredCourses.includes(course)){\n    //       filteredCourses.push(course);\n    //     }\n    //   }\n    // }\n\n\n    this.setState({\n      coursesDisplay: filteredCourses\n    }); // return filteredCourses;\n  }\n\n  getLikedKeywords() {\n    let keywords = [];\n\n    for (const i of Object.values(this.state.likedCourses)) {\n      for (const j of i.keywords) {\n        if (!keywords.includes(j)) {\n          keywords.push(j);\n        }\n      }\n    }\n\n    return keywords;\n  }\n\n  getDislikedKeywords() {\n    let keywords = [];\n\n    for (const i of Object.values(this.state.dislikedCourses)) {\n      for (const j of i.keywords) {\n        if (!keywords.includes(j)) {\n          keywords.push(j);\n        }\n      }\n    }\n\n    return keywords;\n  }\n\n  getLikedSubjects() {\n    let subjects = [];\n    list = [];\n\n    for (const course of Object.values(this.state.likedCourses)) {\n      console.log(\"Subject: \" + course.subject);\n\n      if (!list.includes(course.subject)) {\n        list.push(course.subject);\n        subjects.push(React.createElement(\"option\", {\n          key: course.subject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, course.subject));\n      }\n    }\n\n    console.log(\"subjects: \" + subjects);\n    return subjects;\n  } // getCheckBoxes(){\n  //   <Form.Check\n  //     type=\"checkbox\"\n  //     label=\"first radio\"\n  //     name=\"formHorizontalRadios\"\n  //     id=\"formHorizontalRadios1\"\n  //   />\n  // }\n\n\n  chooseSubject() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      style: {\n        marginTop: \"10px\"\n      },\n      controlId: \"formSubject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Select Interesting Subjects\"), React.createElement(Form.Control, {\n      as: \"select\",\n      ref: this.subjects,\n      onChange: () => this.getDisplayCourses(),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.getLikedSubjects())));\n  }\n\n  render() {\n    const displayKeywords = this.state.displayKeywords;\n    const displayNewCourses = this.state.displayNewCourses;\n    const rateButton = this.state.rateButton;\n    let mybutton;\n    let select;\n    let courses;\n    let clearbutton;\n\n    if (displayKeywords) {\n      select = React.createElement(\"div\", {\n        style: {\n          margin: \"5px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, this.chooseSubject()); // <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\n      //           <Form.Label as=\"legend\" column sm={2}>\n      //             Filters\n      //           </Form.Label>\n      //           <Col sm={10}>\n      //             <Form.Check\n      //               type=\"checkbox\"\n      //               label=\"first radio\"\n      //               name=\"formHorizontalRadios\"\n      //               id=\"formHorizontalRadios1\"\n      //             />\n      //           </Col>\n      //         </Form.Group>\n      // <div style={{ margin: \"5px\" }}>{this.chooseKeyword()}</div>\n    } else {\n      select = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      });\n    }\n\n    if (displayNewCourses) {\n      // this.getDisplayCourses()\n      courses = React.createElement(\"div\", {\n        style: {\n          marginLeft: \"30vw\",\n          paddingLeft: '5px',\n          paddingRight: '5px',\n          height: 'calc(100vh - 10px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(CourseArea, {\n        data: this.state.coursesDisplay,\n        setCartCourses: this.props.setCartCourses,\n        where: \"Recommender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }));\n    } else {\n      courses = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      });\n    }\n\n    if (rateButton) {\n      mybutton = React.createElement(Button, {\n        style: {\n          marginTop: '5px'\n        },\n        onClick: (this.getDisplayCourses, this.handleDoneClick),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Done Rating\");\n      clearbutton = React.createElement(Button, {\n        variant: \"outline-danger\",\n        style: {\n          marginLeft: '5px',\n          marginTop: '5px'\n        },\n        onClick: this.handleAgainClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Clear Selection\");\n    } else {\n      mybutton = React.createElement(Button, {\n        variant: \"danger\",\n        style: {\n          marginTop: '5px'\n        },\n        onClick: this.handleAgainClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Rate Again\");\n      clearbutton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      style: {\n        width: 'calc(30vw - 5px)',\n        marginLeft: '5px',\n        height: 'calc(100vh - 10px)',\n        alignContent: 'center',\n        position: 'fixed'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Rate Your Courses!\"), React.createElement(\"div\", {\n      id: \"rateCourses\",\n      style: {\n        margin: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.getPrevCourses()), mybutton, clearbutton, select)), courses);\n  }\n\n}\n\nexport default RecommendSidebar;","map":{"version":3,"sources":["/Users/amberwestlund/Desktop/cs639-react-3-awestlund/src/RecommendSidebar.js"],"names":["React","Card","Row","Col","Form","PreviousCourse","Button","CourseArea","Course","RecommendSidebar","Component","constructor","props","componentDidMount","fetch","then","res","json","data","setState","previousCourseNames","setLikedCourses","course","temp","state","likedCourses","push","console","log","setDislikedCourses","temp2","dislikedCourses","getPrevCourses","courses","Object","entries","prevName","values","includes","coursesDisplay","displayKeywords","displayNewCourses","rateButton","handleDoneClick","bind","handleAgainClick","subjects","createRef","nodes","document","getElementById","getElementsByTagName","i","length","disabled","getKeywordOptions","keywordOptions","keyword","getDisplayCourses","filteredCourses","likedKeywords","getLikedKeywords","dislikedKeywords","getDislikedKeywords","keywords","key","j","getLikedSubjects","list","subject","chooseSubject","marginTop","render","mybutton","select","clearbutton","margin","marginLeft","paddingLeft","paddingRight","height","setCartCourses","width","alignContent","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport PreviousCourse from \"./PreviousCourse\";\nimport Button from \"react-bootstrap/Button\";\nimport CourseArea from \"./CourseArea\";\nimport Course from \"./Course\";\n// import PreviousCourseArea from './PreviousCourseArea';\n\nclass RecommendSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previousCourseNames: {},\n      coursesDisplay: [],\n      likedCourses: [],\n      dislikedCourses: [],\n      displayKeywords: false,\n      displayNewCourses: false,\n      rateButton: true\n    };\n    this.handleDoneClick = this.handleDoneClick.bind(this);\n    this.handleAgainClick = this.handleAgainClick.bind(this);\n    this.subjects = React.createRef();\n  }\n\n  componentDidMount = () => {\n    fetch(\n      \"https://mysqlcs639.cs.wisc.edu/students/5022025924/classes/completed\"\n    )\n      .then(res => res.json())\n      .then(data => this.setState({ previousCourseNames: data }));\n  };\n\n  handleDoneClick(){\n    //run recommend algo\n    this.setState({displayKeywords: true});\n    this.setState({displayNewCourses: true});\n    this.setState({rateButton: false});\n    // this.getDisplayCourses();\n    var nodes = document.getElementById(\"rateCourses\").getElementsByTagName('*');\n    for(var i = 0; i < nodes.length; i++){\n         nodes[i].disabled = true;\n    }\n  }\n\n  handleAgainClick(){\n    this.setState({displayKeywords: false});\n    this.setState({displayNewCourses: false});\n    this.setState({rateButton: true});\n    var nodes = document.getElementById(\"rateCourses\").getElementsByTagName('*');\n    for(var i = 0; i < nodes.length; i++){\n         nodes[i].disabled = false;\n    }\n    this.setState({coursesDisplay: []});\n    this.setState({likedCourses: []});\n    this.setState({dislikedCourses: []});\n  }\n\n  setLikedCourses = (course)=>{\n    let temp = this.state.likedCourses\n    temp.push(course);\n    this.setState({ likedCourses: temp });\n    console.log(this.state.likedCourses);\n  }\n\n  setDislikedCourses = (course) =>{\n    let temp2 = this.state.dislikedCourses\n    temp2.push(course);\n    this.setState({ dislikedCourses: temp2 });\n    console.log(this.state.dislikedCourses);\n  }\n\n  getKeywordOptions() {\n    let keywordOptions = [];\n\n    for(const keyword of this.props.subjects) {\n      keywordOptions.push(<option key={keyword}>{keyword}</option>);\n    }\n\n    return keywordOptions;\n  }\n\n  getPrevCourses = () => {\n    let courses = [];\n    for (const course of Object.entries(this.props.courses)) {\n      for (const prevName of Object.values(\n        this.state.previousCourseNames.data\n      )) {\n        if (course[0] === prevName) {\n          courses.push(\n          <PreviousCourse \n            key={course[0]} \n            data={course[1]} \n            setLikedCourses={this.setLikedCourses}\n            setDislikedCourses={this.setDislikedCourses}\n            />);\n        }\n      }\n      if (!this.state.previousCourseNames.data.includes(course[0]) && !this.state.coursesDisplay.includes(course[1])){\n        this.state.coursesDisplay.push(course[1]);\n      }\n    }\n    console.log(\"all other courses\" + this.state.coursesDisplay);\n    return courses;\n  };\n\n  getDisplayCourses(){\n    let filteredCourses = []\n    //this.state.coursesDisplay;\n\n    //find liked key words\n    let likedKeywords = this.getLikedKeywords();\n    //find disliked key words\n    let dislikedKeywords = this.getDislikedKeywords();\n    let keywords = [];\n    //find overall liked keywords\n    for (const i of likedKeywords){\n      if (!dislikedKeywords.includes(i)){\n        keywords.push(i);\n      }\n    }\n    console.log(\"my keywords: \" + keywords);\n    //add the courses with the overall key words to be recommended\n    console.log(\"Pos display\"+ this.state.coursesDisplay);\n    for(const course in Object.values(this.state.coursesDisplay)){\n      for(const key in keywords){\n        if (course.keywords.includes(key)){\n          filteredCourses.push(course);\n          console.log();\n        }\n      }\n    }\n\n    // let subs = getLikedSubjects();\n    // for (const course in Object.values(this.state.coursesDisplay)){\n    //   if (subs.includes(course.subject)){\n    //     if(!filteredCourses.includes(course)){\n    //       filteredCourses.push(course);\n    //     }\n    //   }\n    // }\n\n    this.setState({ coursesDisplay: filteredCourses });\n    // return filteredCourses;\n  }\n\n  getLikedKeywords(){\n    let keywords = [];\n    for(const i of Object.values(this.state.likedCourses)){\n      for (const j of i.keywords){\n        if(!keywords.includes(j)){\n          keywords.push(j);\n        }\n      }\n    }\n    return keywords;\n  }\n\n  getDislikedKeywords(){\n    let keywords = [];\n    for(const i of Object.values(this.state.dislikedCourses)){\n      for (const j of i.keywords){\n        if(!keywords.includes(j)){\n          keywords.push(j);\n        }\n      }\n    }\n    return keywords;\n  }\n\n  getLikedSubjects(){\n    let subjects = [];\n    list=[]\n    for(const course of Object.values(this.state.likedCourses)){\n      console.log(\"Subject: \" + course.subject);\n      if(!list.includes(course.subject)){\n        list.push(course.subject);\n        subjects.push(<option key={course.subject}>{course.subject}</option>);\n      }\n    }\n    console.log(\"subjects: \"+ subjects);\n    return subjects;\n  }\n\n  // getCheckBoxes(){\n  //   <Form.Check\n  //     type=\"checkbox\"\n  //     label=\"first radio\"\n  //     name=\"formHorizontalRadios\"\n  //     id=\"formHorizontalRadios1\"\n  //   />\n  // }\n\n  chooseSubject(){\n    return(\n      <Form>\n        <Form.Group style={{marginTop: \"10px\"}} controlId=\"formSubject\">\n          <Form.Label>Select Interesting Subjects</Form.Label>\n          <Form.Control as=\"select\" ref={this.subjects} onChange={() => this.getDisplayCourses()} multiple>\n            {this.getLikedSubjects()}\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    );\n  }\n\n  render() {\n    const displayKeywords = this.state.displayKeywords;\n    const displayNewCourses = this.state.displayNewCourses;\n    const rateButton = this.state.rateButton;\n    let mybutton;\n    let select;\n    let courses;\n    let clearbutton;\n\n    if (displayKeywords){\n      select = <div style={{ margin: \"5px\" }}>{this.chooseSubject()}</div>\n      // <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\n      //           <Form.Label as=\"legend\" column sm={2}>\n      //             Filters\n      //           </Form.Label>\n      //           <Col sm={10}>\n      //             <Form.Check\n      //               type=\"checkbox\"\n      //               label=\"first radio\"\n      //               name=\"formHorizontalRadios\"\n      //               id=\"formHorizontalRadios1\"\n      //             />\n      //           </Col>\n      //         </Form.Group>\n      // <div style={{ margin: \"5px\" }}>{this.chooseKeyword()}</div>\n    }\n    else{\n      select = <div></div>\n    }\n\n    if (displayNewCourses){\n      // this.getDisplayCourses()\n      courses = <div style={{ marginLeft: \"30vw\", paddingLeft: '5px', paddingRight: '5px', height: 'calc(100vh - 10px)'}}>\n        <CourseArea \n          data={this.state.coursesDisplay} \n          setCartCourses={this.props.setCartCourses}\n          where=\"Recommender\"\n          />\n        </div>\n    }\n    else{\n      courses = <div></div>\n    }\n\n    if(rateButton){\n      mybutton = <Button style={{marginTop: '5px'}} onClick={this.getDisplayCourses, this.handleDoneClick}>Done Rating</Button>\n      clearbutton = <Button variant=\"outline-danger\" style={{marginLeft: '5px', marginTop: '5px'}} onClick={this.handleAgainClick} >Clear Selection</Button>\n    }\n    else{\n      mybutton = <Button variant=\"danger\" style={{marginTop: '5px'}} onClick={this.handleAgainClick} >Rate Again</Button>\n      clearbutton = <div></div>\n    }\n\n    return (\n      <>\n        <Card style={{width: 'calc(30vw - 5px)', marginLeft: '5px', height: 'calc(100vh - 10px)', alignContent: 'center', position: 'fixed'}}>\n          <Card.Body>\n            <Card.Title>Rate Your Courses!</Card.Title>\n            <div id=\"rateCourses\" style={{ margin: \"5px\" }}>{this.getPrevCourses()}</div>\n            {mybutton}\n            {clearbutton}\n            {select}\n          </Card.Body>\n        </Card>\n        {courses}\n      </>\n      );\n  }\n}\n\nexport default RecommendSidebar;\n"]},"metadata":{},"sourceType":"module"}