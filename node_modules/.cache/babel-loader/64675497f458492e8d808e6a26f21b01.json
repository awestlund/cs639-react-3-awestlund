{"ast":null,"code":"var _jsxFileName = \"/Users/amberwestlund/Desktop/cs639-react-2-awestlund/src/Course.js\";\nimport React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\n\nclass Course extends React.Component {\n  render() {\n    return React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.props.data.name)), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Number: \", this.props.data.number, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), \"Credits: \", this.props.data.credits, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), \"Discription: \", this.props.data.description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), \"Sections: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), this.getSections(this.props.data.sections)))));\n  }\n\n  getCredits() {\n    if (this.props.data.credits === 1) return '1 credit';else return this.props.data.credits + ' credits';\n  }\n\n  getSections(sections) {\n    // add to some structure here\n    let allSections = [];\n\n    for (const section of Object.entries(sections)) {\n      allSections.push(this.makeSection(section));\n    }\n\n    return allSections;\n  }\n\n  makeSection(section) {\n    return React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, section[0])), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Instructor: \", section[1].instructor, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \"Location: \", section[1].location, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Subsections: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.getSubsections(section[1].subsections)))));\n  }\n\n  getSubsections(subsections) {\n    // add to some structure here\n    let allSubsections = [];\n\n    for (const subsection of Object.entries(subsections)) {\n      console.log(subsection[0]);\n      allSubsections.push(this.makeSubsection(subsection));\n    }\n\n    console.log(\"here4\");\n    return allSubsections;\n  }\n\n  makeSubsection(subsection) {\n    console.log(\"here1\");\n    return React.createElement(Accordion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '100%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, subsection[0], console.log(\"here2\"))), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, console.log(\"here3\"), \"Location: \", subsection[1].location, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"Time: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.getTimes(subsection[1].time)))));\n  }\n\n  getTimes(timeNode) {\n    allTimes = [];\n\n    for (const dayTime of Object.entries(timeNode)) {\n      console.log(dayTime[0]);\n      allTimes.push(this.makeTime(dayTime));\n    }\n\n    return allTimes;\n  }\n\n  makeTime(dayTime) {\n    return React.createElement(Card, {\n      style: {\n        width: '33%',\n        marginTop: '5px',\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"dayTime[0]\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"dayTime[1]\"));\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/amberwestlund/Desktop/cs639-react-2-awestlund/src/Course.js"],"names":["React","Card","Accordion","Button","Course","Component","render","width","marginTop","marginBottom","props","data","name","number","credits","description","getSections","sections","getCredits","allSections","section","Object","entries","push","makeSection","instructor","location","getSubsections","subsections","allSubsections","subsection","console","log","makeSubsection","getTimes","time","timeNode","allTimes","dayTime","makeTime"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Course extends React.Component {\r\n  render() {\r\n    return (\r\n      <Accordion>\r\n        <Card style={{width: '100%', marginTop: '5px', marginBottom: '5px'}}>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">{this.props.data.name}\r\n              {/* add to cart fuctionality */}\r\n              {/* <Button style={{position: \"absolute\",right: \"5px\", padding: \"5px\"}} variant=\"outline-primary\">Add to Cart</Button> */}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className=\"mb-2 text-muted\">\r\n              Number: {this.props.data.number} <br></br> \r\n              Credits: {this.props.data.credits} <br></br> \r\n              Discription: {this.props.data.description} <br></br> \r\n              <br></br> \r\n              Sections: <br></br>\r\n              {this.getSections(this.props.data.sections)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getCredits() {\r\n    if(this.props.data.credits === 1)\r\n      return '1 credit';\r\n    else\r\n      return this.props.data.credits + ' credits';\r\n  }\r\n\r\n  getSections(sections){\r\n    // add to some structure here\r\n    let allSections = [];\r\n    for(const section of Object.entries(sections)){\r\n      allSections.push(this.makeSection(section));\r\n    }\r\n    return allSections;\r\n  }\r\n\r\n  makeSection(section){\r\n    return (\r\n      <Accordion>\r\n        <Card style={{width: '100%', marginTop: '5px', marginBottom: '5px'}}>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">{section[0]}\r\n              {/* add to cart fuctionality */}\r\n              {/* <Button style={{position: \"absolute\",right: \"5px\", padding: \"5px\"}} variant=\"outline-primary\">Add to Cart</Button> */}\r\n              {/* onClick setCartCourses = {data} => this.props.section} */}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className=\"mb-2 text-muted\">\r\n              Instructor: {section[1].instructor} <br></br> \r\n              Location: {section[1].location} <br></br> \r\n              {/* Time: {section.time} <br></br> */}\r\n              Subsections: <br></br>\r\n              {this.getSubsections(section[1].subsections)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getSubsections(subsections){\r\n    // add to some structure here\r\n    let allSubsections = [];\r\n    for(const subsection of Object.entries(subsections)){\r\n      console.log(subsection[0]);\r\n      allSubsections.push(this.makeSubsection(subsection));\r\n    }\r\n    console.log(\"here4\");\r\n    return allSubsections;\r\n  }\r\n\r\n  makeSubsection(subsection){\r\n    console.log(\"here1\");\r\n    return (\r\n      <Accordion>\r\n        <Card style={{width: '100%', marginTop: '5px', marginBottom: '5px'}}>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">{subsection[0]}\r\n            {console.log(\"here2\")}\r\n              {/* add to cart fuctionality */}\r\n              {/* <Button style={{position: \"absolute\",right: \"5px\", padding: \"5px\"}} variant=\"outline-primary\">Add to Cart</Button> */}\r\n              {/* onClick setCartCourses = {data} => this.props.section} */}\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body className=\"mb-2 text-muted\">\r\n            {console.log(\"here3\")}\r\n              Location: {subsection[1].location} <br></br> \r\n              Time: <br></br>\r\n              {this.getTimes(subsection[1].time)}\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n\r\n  getTimes(timeNode){\r\n    allTimes = []\r\n    for(const dayTime of Object.entries(timeNode)){\r\n      console.log(dayTime[0]);\r\n      allTimes.push(this.makeTime(dayTime));\r\n    }\r\n    return allTimes\r\n  }\r\n\r\n  makeTime(dayTime){\r\n    return(\r\n      <Card style={{width: '33%', marginTop: '5px', marginBottom: '5px'}}>\r\n        <Card.Header>dayTime[0]</Card.Header>\r\n        <Card.Body>dayTime[1]</Card.Body>\r\n     </Card>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Course;\r\n"]},"metadata":{},"sourceType":"module"}